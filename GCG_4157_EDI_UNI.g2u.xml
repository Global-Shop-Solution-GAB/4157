<?xml version="1.0" encoding="utf-8"?>
<SyntaxEdit xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <SearchOptions>FindTextAtCursor PromptOnReplace FindSelectedText CycledSearch</SearchOptions>
  <BorderStyle>None</BorderStyle>
  <Pages>
    <DefaultPage>
      <Header>
        <Offset>
          <X>0</X>
          <Y>0</Y>
        </Offset>
      </Header>
      <Footer>
        <Offset>
          <X>0</X>
          <Y>0</Y>
        </Offset>
      </Footer>
      <PageSize>
        <Width>0</Width>
        <Height>0</Height>
      </PageSize>
    </DefaultPage>
  </Pages>
  <DisplayStrings />
  <Selection>
    <SelectionRect>
      <Location>
        <X>0</X>
        <Y>641</Y>
      </Location>
      <Size>
        <Width>24</Width>
        <Height>2</Height>
      </Size>
      <X>0</X>
      <Y>641</Y>
      <Width>24</Width>
      <Height>2</Height>
    </SelectionRect>
    <Options>UseColors OverwriteBlocks SelectLineOnTripleClick CopyLineWhenEmpty SelectWordOnCtrlClick</Options>
  </Selection>
  <Gutter>
    <LineNumbersForeColor>WindowText</LineNumbersForeColor>
    <Options>PaintLineNumbers PaintBookMarks PaintLineModificators</Options>
  </Gutter>
  <Margin>
    <Visible>false</Visible>
  </Margin>
  <LineStyles />
  <LineSeparator />
  <Printing>
    <Footer>
      <Offset>
        <X>0</X>
        <Y>0</Y>
      </Offset>
    </Footer>
    <Header>
      <Offset>
        <X>0</X>
        <Y>0</Y>
      </Offset>
    </Header>
  </Printing>
  <WhiteSpace />
  <TextSource>
    <Position>
      <X>0</X>
      <Y>641</Y>
    </Position>
    <Lexer>
      <Scheme>
        <Author>Quantum Whale, LLC.</Author>
        <Copyright>Copyright (c) 2004 - 2014 Quantum Whale LLC.</Copyright>
        <FileType>gas</FileType>
        <Version>1.5</Version>
        <Styles>
          <Style>
            <Name>idents</Name>
            <ForeColor>ControlText</ForeColor>
          </Style>
          <Style>
            <Name>numbers</Name>
            <ForeColor>ControlText</ForeColor>
          </Style>
          <Style>
            <Name>reswords</Name>
            <ForeColor>Blue</ForeColor>
          </Style>
          <Style>
            <Name>comments</Name>
            <ForeColor>Green</ForeColor>
            <PlainText>true</PlainText>
          </Style>
          <Style>
            <Name>xmlcomments</Name>
            <ForeColor>Gray</ForeColor>
          </Style>
          <Style>
            <Name>symbols</Name>
            <ForeColor>WindowText</ForeColor>
          </Style>
          <Style>
            <Name>whitespace</Name>
            <ForeColor>WindowText</ForeColor>
          </Style>
          <Style>
            <Name>strings</Name>
            <ForeColor>Maroon</ForeColor>
            <PlainText>true</PlainText>
          </Style>
          <Style>
            <Name>directives</Name>
            <ForeColor>Blue</ForeColor>
          </Style>
          <Style>
            <Name>htmlparams</Name>
            <ForeColor>Red</ForeColor>
          </Style>
          <Style>
            <Name>syntax errors</Name>
            <ForeColor>Red</ForeColor>
          </Style>
          <Style>
            <Name>codes nippets</Name>
            <ForeColor>Black</ForeColor>
            <BackColor>255:180:228:180</BackColor>
          </Style>
          <Style>
            <Name>GabReservedWords</Name>
            <ForeColor>Blue</ForeColor>
          </Style>
          <Style>
            <Name>GabTokenWithBrackets</Name>
            <ForeColor>Gray</ForeColor>
          </Style>
          <Style>
            <Name>GabFunctionIntrinsicDebug</Name>
            <ForeColor>White</ForeColor>
            <BackColor>Red</BackColor>
            <FontStyle>Bold</FontStyle>
            <PlainText>true</PlainText>
          </Style>
          <Style>
            <Name>GabVariable</Name>
            <ForeColor>Teal</ForeColor>
          </Style>
          <Style>
            <Name>GabVariableSystemDefined</Name>
            <ForeColor>Teal</ForeColor>
            <FontStyle>Bold Italic</FontStyle>
          </Style>
          <Style>
            <Name>GabGui</Name>
            <ForeColor>OrangeRed</ForeColor>
          </Style>
          <Style>
            <Name>GabProgramSubStartEnd</Name>
            <ForeColor>Black</ForeColor>
            <BackColor>LightGray</BackColor>
            <FontStyle>Bold</FontStyle>
            <PlainText>true</PlainText>
          </Style>
        </Styles>
      </Scheme>
    </Lexer>
    <TextStrings>
      <Lines>
        <string>Program.Sub.ScreenSU.Start</string>
        <string>Gui.Form1..create</string>
        <string>Gui.Form1..caption("Universal Display Fixture EDI Upload")</string>
        <string>Gui.Form1..size(6450,2385)</string>
        <string>Gui.Form1..minx(0)</string>
        <string>Gui.Form1..miny(0)</string>
        <string>Gui.Form1..position(0,0)</string>
        <string>Gui.Form1..event(UnLoad,form1_unload)</string>
        <string>Gui.Form1..alwaysontop(False)</string>
        <string>Gui.Form1..fontname("Arial")</string>
        <string>Gui.Form1..fontsize(8)</string>
        <string>Gui.Form1..forecolor(0)</string>
        <string>Gui.Form1..fontstyle(,,,)</string>
        <string>Gui.Form1..BackColor(-2147483633)</string>
        <string>Gui.Form1..controlbox(True)</string>
        <string>Gui.Form1..maxbutton(True)</string>
        <string>Gui.Form1..minbutton(True)</string>
        <string>Gui.Form1..mousepointer(0)</string>
        <string>Gui.Form1..moveable(True)</string>
        <string>Gui.Form1..sizeable(True)</string>
        <string>Gui.Form1..ShowInTaskBar(True)</string>
        <string>Gui.Form1..titlebar(True)</string>
        <string>Gui.Form1.lblFile.create(label,"Import File",True,1935,255,1,200,200,True,0,Arial,8,-2147483633,0)</string>
        <string>Gui.Form1.lblFile.defaultvalue("")</string>
        <string>Gui.Form1.lblFile.controlgroup(0)</string>
        <string>Gui.Form1.txtFile.create(textbox,"",True,5460,300,0,100,400,True,0,Arial,8,-2147483643,1)</string>
        <string>Gui.Form1.txtFile.defaultvalue("")</string>
        <string>Gui.Form1.txtFile.controlgroup(0)</string>
        <string>Gui.Form1.cmdBrowser.create(button)</string>
        <string>Gui.Form1.cmdBrowser.caption("^")</string>
        <string>Gui.Form1.cmdBrowser.visible(True)</string>
        <string>Gui.Form1.cmdBrowser.size(350,350)</string>
        <string>Gui.Form1.cmdBrowser.zorder(0)</string>
        <string>Gui.Form1.cmdBrowser.position(5700,390)</string>
        <string>Gui.Form1.cmdBrowser.enabled(True)</string>
        <string>Gui.Form1.cmdBrowser.fontname("Arial")</string>
        <string>Gui.Form1.cmdBrowser.fontsize(8)</string>
        <string>Gui.Form1.cmdBrowser.event(Click,cmdbrowser_click)</string>
        <string>Gui.Form1.cmdBrowser.defaultvalue("")</string>
        <string>Gui.Form1.cmdBrowser.controlgroup(0)</string>
        <string>Gui.Form1.cmdOK.create(button)</string>
        <string>Gui.Form1.cmdOK.caption("OK")</string>
        <string>Gui.Form1.cmdOK.visible(True)</string>
        <string>Gui.Form1.cmdOK.size(855,375)</string>
        <string>Gui.Form1.cmdOK.zorder(0)</string>
        <string>Gui.Form1.cmdOK.position(195,1170)</string>
        <string>Gui.Form1.cmdOK.enabled(True)</string>
        <string>Gui.Form1.cmdOK.fontname("Arial")</string>
        <string>Gui.Form1.cmdOK.fontsize(8)</string>
        <string>Gui.Form1.cmdOK.event(Click,cmdok_click)</string>
        <string>Gui.Form1.cmdOK.defaultvalue("")</string>
        <string>Gui.Form1.cmdOK.controlgroup(0)</string>
        <string>Program.Sub.ScreenSU.End</string>
        <string />
        <string>Program.Sub.Preflight.Start</string>
        <string>Variable.Global.sFileLines.Declare(String)</string>
        <string>Variable.Global.sPart.Declare(String)</string>
        <string>Variable.Global.sLineNum.Declare(String)</string>
        <string>Variable.Global.sHeader.Declare(String)</string>
        <string />
        <string>Variable.Global.sPO.Declare(String)</string>
        <string>Variable.UDT.uOrders.Define("ConversionFlag",String)</string>
        <string>Variable.UDT.uOrders.Define("PONumber",String)</string>
        <string>Variable.UDT.uOrders.Define("ShipName",String)</string>
        <string>Variable.UDT.uOrders.Define("ShipAdd1",String)</string>
        <string>Variable.UDT.uOrders.Define("ShipAdd2",String)</string>
        <string>Variable.UDT.uOrders.Define("ShipAdd3",String)</string>
        <string>Variable.UDT.uOrders.Define("ShipAdd4",String)</string>
        <string>Variable.UDT.uOrders.Define("ShipAdd5",String)</string>
        <string>Variable.UDT.uOrders.Define("ShipCity",String)</string>
        <string>Variable.UDT.uOrders.Define("ShipState",String)</string>
        <string>Variable.UDT.uOrders.Define("ShipZip",String)</string>
        <string>Variable.UDT.uOrders.Define("ShipCountry",String)</string>
        <string>Variable.UDT.uOrders.Define("Contact",String)</string>
        <string>Variable.UDT.uOrders.Define("ContactPhone",String)</string>
        <string>Variable.UDT.uOrders.Define("BuyerPartNO",String)</string>
        <string>Variable.UDT.uOrders.Define("OrderQty",String)</string>
        <string>Variable.UDT.uOrders.Define("UnitPrice",String)</string>
        <string>Variable.UDT.uOrders.Define("PromiseDate",String)</string>
        <string>Variable.UDT.uOrders.Define("ShipVia",String)</string>
        <string>Variable.UDT.uOrders.Define("WayBill",String)</string>
        <string>Variable.UDT.uOrders.Define("Carrier",String)</string>
        <string>Variable.UDT.uOrders.Define("ShipAttn",String)</string>
        <string>Variable.UDT.uOrders.Define("BillName",String)</string>
        <string>Variable.UDT.uOrders.Define("BillAdd1",String)</string>
        <string>Variable.UDT.uOrders.Define("BillAdd2",String)</string>
        <string>Variable.UDT.uOrders.Define("BillAdd3",String)</string>
        <string>Variable.UDT.uOrders.Define("BillAdd4",String)</string>
        <string>Variable.UDT.uOrders.Define("BillAdd5",String)</string>
        <string>Variable.UDT.uOrders.Define("BillCity",String)</string>
        <string>Variable.UDT.uOrders.Define("BillState",String)</string>
        <string>Variable.UDT.uOrders.Define("BillZip",String)</string>
        <string>Variable.UDT.uOrders.Define("BillCountry",String)</string>
        <string>Variable.UDT.uOrders.Define("BillAttn",String)</string>
        <string>Variable.UDT.uOrders.Define("BillIntlFlag",String)</string>
        <string>Variable.UDT.uOrders.Define("HDRUser2",String)</string>
        <string>Variable.UDT.uOrders.Define("HDRUser3",String)</string>
        <string>Variable.UDT.uOrders.Define("HDRUser4",String)</string>
        <string>Variable.UDT.uOrders.Define("HDRUser5",String)</string>
        <string>Variable.UDT.uOrders.Define("OrderSort",String)</string>
        <string>Variable.UDT.uOrders.Define("OrderSort2",String)</string>
        <string>Variable.UDT.uOrders.Define("Email",String)</string>
        <string>Variable.UDT.uOrders.Define("POLineNumber",String)</string>
        <string>Variable.UDT.uOrders.Define("Info1",String)</string>
        <string>Variable.UDT.uOrders.Define("Info2",String)</string>
        <string>Variable.UDT.uOrders.Define("LineUser1",String)</string>
        <string>Variable.UDT.uOrders.Define("LineUser2",String)</string>
        <string>Variable.UDT.uOrders.Define("LineUser3",String)</string>
        <string>Variable.UDT.uOrders.Define("LineUser4",String)</string>
        <string>Variable.UDT.uOrders.Define("LineUser5",String)</string>
        <string>Variable.UDT.uOrders.Define("ShipToCode",String)</string>
        <string>Variable.UDT.uOrders.Define("BuyerID",String)</string>
        <string>Variable.uGlobal.uOrders.Declare("uOrders")</string>
        <string>Variable.Global.dReqDate.Declare(Date,1/1/1900)</string>
        <string>Program.Sub.Preflight.End</string>
        <string />
        <string>Program.Sub.Main.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("Main_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string>'Created by SKC on 3/24/2016 for Phoenix Manufacturing</string>
        <string>'The user will be able to select a csv file and then an EA850 file will be created with M lines</string>
        <string>'This will run from a custom menu Item, and parts on the file with a sort code of SLC will not have lines created.  If a customer part xref exists then that part number will be used instead of the GSS part number.</string>
        <string>v.Local.sFilePath.Declare(String)</string>
        <string>V.Local.sError.Declare(String)</string>
        <string />
        <string>F.Intrinsic.Control.If(V.Caller.GSSVersion,&lt;,"2015.3")</string>
        <string>	F.Intrinsic.UI.Msgbox("Please update to version 2015.3","Version Error")</string>
        <string>	F.Intrinsic.Control.End</string>
        <string />
        <string>F.Intrinsic.Control.EndIf</string>
        <string>F.ODBC.Connection!conx.OpenConnection(V.Ambient.PDSN,V.Ambient.PUser,V.Ambient.PPass)</string>
        <string>F.Intrinsic.String.Build("{0}\Order.csv", v.Caller.FilesDir, v.Local.sFilePath)</string>
        <string>Gui.Form1.txtFile.Text(v.Local.sFilePath)</string>
        <string>Gui.Form1..Show</string>
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("Main_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_4157_EDI_UNI.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(Form1_unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>Program.Sub.Main.End</string>
        <string />
        <string>Program.Sub.form1_unload.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("form1_unload_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string />
        <string>F.ODBC.Connection!conx.Close</string>
        <string />
        <string>F.Intrinsic.Control.End</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("form1_unload_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_4157_EDI_UNI.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.End</string>
        <string />
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>Program.Sub.form1_unload.End</string>
        <string />
        <string>Program.Sub.cmdok_click.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("cmdok_click_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string />
        <string>V.Local.sSavePath.Declare(String)</string>
        <string>v.Local.sFileData.Declare(String)</string>
        <string>'V.Static.sPO.Declare(String)</string>
        <string>V.Static.iCount.Declare(Long)</string>
        <string>V.Static.iOrd.Declare(Long)</string>
        <string>V.Local.fQty.Declare(Float)</string>
        <string />
        <string />
        <string>'Check to see if the Files were selected</string>
        <string>F.Intrinsic.Control.If(V.Screen.Form1!txtFile.Text,=,"")</string>
        <string>	F.Intrinsic.UI.Msgbox("Please select Import File")</string>
        <string>	F.Intrinsic.Control.ExitSub</string>
        <string>F.Intrinsic.Control.EndIf</string>
        <string>Gui.Form1..Visible(False)</string>
        <string />
        <string>F.Intrinsic.Control.CallSub(Importxls)</string>
        <string />
        <string>F.Intrinsic.Debug.InvokeDebugger</string>
        <string />
        <string>F.Intrinsic.Debug.Stop</string>
        <string />
        <string>'Preset the needed values.</string>
        <string>V.Global.sLineNum.Set("0")</string>
        <string>v.Global.sPO.Set(v.uGlobal.uOrders(0)!PONumber.Trim)</string>
        <string>v.Global.sPart.Set(v.uGlobal.uOrders(0)!BuyerPartNo.Trim)</string>
        <string>'V.Global.sPO.Set(v.DataView.SOLine!SOView(0).PONumber!fieldValTrim)</string>
        <string>'V.Global.sPart.Set(v.DataView.SOLine!SOView(0).BuyerPartNO!fieldValTrim)</string>
        <string />
        <string>F.Intrinsic.Control.For(V.Static.iCount,0,v.uGlobal.uOrders.UBound,1)</string>
        <string>'F.Intrinsic.Control.For(V.Static.iCount,0,v.DataView.SOLine!SOView.RowCount--,1)</string>
        <string>	'check that the PO Number hasn't changed</string>
        <string>	F.Intrinsic.Control.If(v.Global.sPO.Trim, =,v.uGlobal.uOrders(v.Static.iCount)!PONumber.Trim) </string>
        <string>'	F.Intrinsic.Control.If(v.Global.sPO.Trim, =,v.DataView.SOLine!SOView(v.Static.iCount).PONumber!fieldValTrim) </string>
        <string>		'Check if part number changes</string>
        <string>		F.Intrinsic.Control.If(v.Global.sPart.Trim, =,v.uGlobal.uOrders(v.Static.iCount)!BuyerPartNo.Trim)</string>
        <string>'		F.Intrinsic.Control.If(v.Global.sPart.Trim, =,v.DataView.SOLine!SOView(V.Static.icount).BuyerPartNO!fieldValTrim)</string>
        <string>			'Add part Qty</string>
        <string>			F.Intrinsic.Math.Add(v.uGlobal.uOrders(v.Static.iCount)!OrderQty,V.Local.fQty,V.Local.fQty)</string>
        <string>'			F.Intrinsic.Math.Add(v.DataView.SOLine!SOView(V.Static.icount).OrderQty!FieldVal,V.Local.fQty,V.Local.fQty)</string>
        <string>		F.Intrinsic.Control.Else</string>
        <string>		'Else Write line for part</string>
        <string>			F.Intrinsic.Math.Add(V.Global.sLineNum,1,V.Global.sLineNum)</string>
        <string>			F.Intrinsic.String.LPad(V.Global.sLineNum,"0",3,V.Global.sLineNum)</string>
        <string>			F.Intrinsic.Math.Sub(V.Static.iCount,1,V.Static.iOrd)</string>
        <string>			F.Intrinsic.Control.CallSub(Llines,"iOrd",V.Static.iOrd,"fQty",V.Local.fQty)</string>
        <string>			F.Intrinsic.String.Build("{0}{1}", v.Local.sFileData, v.Args.sLines, v.Local.sFileData)</string>
        <string>			v.Global.sPart.Set(v.uGlobal.uOrders(v.Static.iCount)!BuyerPartNo.Trim)</string>
        <string>'			v.Global.sPart.Set(v.DataView.SOLine!SOView(v.Static.iCount).BuyerPartNO!FieldValTrim)</string>
        <string>		F.Intrinsic.Control.EndIf </string>
        <string>	F.Intrinsic.Control.Else</string>
        <string>	'if changed write Header Info</string>
        <string>		F.Intrinsic.Math.Sub(V.Static.iCount,1,V.Static.iOrd)</string>
        <string>		F.Intrinsic.Control.CallSub(header, "iOrd", v.Static.iOrd)</string>
        <string>		F.Intrinsic.Control.CallSub(headerA, "iOrd", v.Static.iOrd)</string>
        <string>		F.Intrinsic.Control.CallSub(HeaderB, "iOrd", v.Static.iOrd)</string>
        <string>		F.Intrinsic.Control.CallSub(HeaderC, "iOrd", v.Static.iOrd)</string>
        <string>		F.Intrinsic.Math.Add(V.Global.sLineNum,1,V.Global.sLineNum)</string>
        <string>		F.Intrinsic.String.LPad(V.Global.sLineNum,"0",3,V.Global.sLineNum)</string>
        <string>		F.Intrinsic.Math.Sub(V.Static.iCount,1,V.Static.iOrd)</string>
        <string>		F.Intrinsic.Control.CallSub(Llines,"iOrd",V.Static.iOrd,"fQty",V.Local.fQty)</string>
        <string>		F.Intrinsic.String.Build("{0}{1}{2}{3}{4}{5}", v.Local.sFileData,v.Args.sHeader, v.Args.sHeaderA, v.Args.sHeaderB, v.Args.sHeaderC, v.Args.sLines,v.Local.sFileData)</string>
        <string>		v.Global.sPO.Set(v.uGlobal.uOrders(v.Static.iCount)!PONumber.Trim)</string>
        <string>'		v.Global.sPO.Set(v.DataView.SOLine!SOView(v.Static.iCount).PONumber!FieldValTrim)</string>
        <string>		v.Global.sPart.Set(v.uGlobal.uOrders(v.Static.iCount)!BuyerPartNo.Trim)</string>
        <string>'		v.Global.sPart.Set(v.DataView.SOLine!SOView(v.Static.iCount).BuyerPartNO!FieldValTrim)</string>
        <string>		v.Local.fQty.Set(0)</string>
        <string>		F.Intrinsic.Math.Add(v.uGlobal.uOrders(v.Static.iCount)!OrderQty,V.Local.fQty,V.Local.fQty)</string>
        <string>'		F.Intrinsic.Math.Add(v.DataView.SOLine!SOView(V.Static.icount).OrderQty!FieldVal,V.Local.fQty,V.Local.fQty)</string>
        <string>		v.Global.sLineNum.Set("0")</string>
        <string>	F.Intrinsic.Control.EndIf	</string>
        <string>F.Intrinsic.Control.Next(V.static.iCount)</string>
        <string />
        <string>'Save file to the Global\\Files Directory with a Name of EA850@@@ with @ being the Company Code</string>
        <string>F.Intrinsic.String.Build("{0}\EA850{1}",V.Caller.FilesDir,V.Caller.CompanyCode,V.Local.sSavePath)</string>
        <string>F.Intrinsic.File.String2File(V.Local.sSavePath,V.Local.sFileData)</string>
        <string />
        <string>F.Global.General.CallWrapperSync(50,"ORD040GI")</string>
        <string>F.Global.General.CallWrapperSync(50,"ORD045GI")</string>
        <string>F.Intrinsic.Control.CallSub(Form1_unload)</string>
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("cmdok_click_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_4157_EDI_UNI.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(Form1_unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>Program.Sub.cmdok_click.End</string>
        <string />
        <string>Program.Sub.cmdbrowser_click.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("cmdbrowser_click_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.sPath.Declare(String)</string>
        <string>V.Local.sControl.Declare(String)</string>
        <string>F.Intrinsic.UI.ShowOpenFileDialog("","csv|*.csv",V.Caller.FilesDir,V.Local.sPath)</string>
        <string>	F.Intrinsic.Control.If(V.Local.sPath,!=,"***CANCEL***")</string>
        <string>		Gui.Form1.txtFile.Text(V.Local.sPath)</string>
        <string>F.Intrinsic.Control.EndIf</string>
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("cmdbrowser_click_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_4157_EDI_UNI.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(Form1_unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>Program.Sub.cmdbrowser_click.End</string>
        <string />
        <string>Program.Sub.LLines.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("LLines_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.sLines.Declare(String)</string>
        <string>V.Local.sQty.Declare(String)</string>
        <string>V.Local.sDate.Declare(String)</string>
        <string>V.Local.sPart.Declare(String)</string>
        <string>V.Local.sHeader.Declare(String)</string>
        <string>V.Static.sTempLIne.Declare(String)</string>
        <string>V.Local.sPo.Declare(String)</string>
        <string>V.Local.sCurrentPO.Declare(String)</string>
        <string>v.Local.sRet.Declare(String)</string>
        <string>V.Local.iLen.Declare(Long)</string>
        <string>'Cust</string>
        <string>F.Intrinsic.String.RPad(v.uGlobal.uOrders(v.Args.iOrd)!BuyerID.Trim, " ", 35, v.Local.sLines)</string>
        <string>'F.Intrinsic.String.RPad(v.DataView.SOLine!SOView(V.ARgs.iOrd).BuyerID!FieldValTrim, " ", 35, v.Local.sLines)</string>
        <string>'PO</string>
        <string>F.Intrinsic.String.RPad(v.uGlobal.uOrders(v.Args.iOrd)!PONumber.Trim, " ", 15, v.Local.sRet)</string>
        <string>'F.Intrinsic.String.RPad(v.DataView.SOLine!SOView(v.Args.iOrd).PONumber!FieldValTrim, " ", 15, v.Local.sRet)</string>
        <string>f.Intrinsic.String.Build("{0}{1}{2}", v.Local.sLines,v.Local.sRet, v.Global.sLineNum,v.Local.sLines)</string>
        <string>F.Intrinsic.String.RPad(v.uGlobal.uOrders(v.Args.iOrd)!BuyerPartNO.Trim, " ", 20, v.Local.sRet)</string>
        <string>'F.Intrinsic.String.RPad(v.DataView.SOLine!SOView(v.Args.iOrd).BuyerPartNO!FieldValTrim, " ", 20, v.Local.sRet)</string>
        <string>F.Intrinsic.String.RPad(V.Local.sLines," ",76,V.Local.sLines)</string>
        <string>'Running Qty</string>
        <string>F.Intrinsic.String.Split(V.Args.fQty,".",V.Local.sQty)</string>
        <string>V.Local.sQty.RedimPreserve(0,1)</string>
        <string>F.Intrinsic.String.LPad(V.Local.sQty(0),"0",8,V.Local.sQty(0))</string>
        <string>F.Intrinsic.String.RPad(V.Local.sQty(1),"0",4,V.Local.sQty(1))</string>
        <string>F.Intrinsic.String.Build("{0}{1}",V.Local.sQty(0),V.Local.sQty(1),V.Local.sQty(0))</string>
        <string>F.Intrinsic.String.Build("{0}{1}",V.Local.sLines,V.Local.sQty,V.Local.sLines)</string>
        <string>F.Intrinsic.String.RPad(V.Local.sLines," ",90,V.Local.sLines)</string>
        <string>'Price</string>
        <string>F.Intrinsic.String.Split(v.uGlobal.uOrders(v.Args.iOrd)!UnitPrice.Float, ".", v.Local.sQty)</string>
        <string>'F.Intrinsic.String.Split(v.DataView.SOLine!SOView(v.Args.iOrd).UnitPrice!FieldValFloat, ".", v.Local.sQty)</string>
        <string>v.Local.sQty.RedimPreserve(0,1)</string>
        <string>F.Intrinsic.String.LPad(V.Local.sQty(0),"0",8,V.Local.sQty(0))</string>
        <string>F.Intrinsic.String.RPad(V.Local.sQty(1),"0",5,V.Local.sQty(1))</string>
        <string>F.Intrinsic.String.Build("{0}{1}",V.Local.sQty(0),V.Local.sQty(1),V.Local.sQty(0))</string>
        <string>F.Intrinsic.String.Build("{0}{1}",V.Local.sLines,V.Local.sQty,V.Local.sLines)</string>
        <string>F.Intrinsic.String.RPad(V.Local.sLines," ",225,V.Local.sLines)</string>
        <string>'PO Line Number</string>
        <string>F.Intrinsic.String.LPad(v.uGlobal.uOrders(v.Args.iOrd)!POLineNumber.Trim, "0", 3, v.Local.sRet)</string>
        <string>'F.Intrinsic.String.LPad(v.DataView.SOLine!SOView(v.Args.iOrd).POLineNumber!FieldValTrim, "0", 3, v.Local.sRet)</string>
        <string>F.Intrinsic.String.Build("{0}{1}",V.Local.sLines,v.Local.sRet,V.Local.sLines)</string>
        <string>F.Intrinsic.String.RPad(V.Local.sLines," ",275,V.Local.sLines)</string>
        <string>'Ship To Code</string>
        <string>F.Intrinsic.String.Build("{0}{1}",V.Local.sLines,v.uGlobal.uOrders(v.Args.iOrd)!ShipToCode,V.Local.sLines)</string>
        <string>'F.Intrinsic.String.Build("{0}{1}",V.Local.sLines,v.DataView.SOLine!SOView(v.Args.iOrd).ShipToCode!FieldVal,V.Local.sLines)</string>
        <string>F.Intrinsic.String.RPad(V.Local.sLines," ",310,V.Local.sLines)</string>
        <string>'Info1</string>
        <string>F.Intrinsic.String.Build("{0}Y{1}",V.Local.sLines,v.uGlobal.uOrders(v.Args.iOrd)!Info1,V.Local.sLines)</string>
        <string>'F.Intrinsic.String.Build("{0}Y{1}",V.Local.sLines,v.DataView.SOLine!SOView(v.Args.iOrd).Info1!FieldVal,V.Local.sLines)</string>
        <string>F.Intrinsic.String.RPad(V.Local.sLines," ",330,V.Local.sLines)</string>
        <string>'Info2</string>
        <string>F.Intrinsic.String.Build("{0}Y{1}",V.Local.sLines,v.uGlobal.uOrders(v.Args.iOrd)!Info2,V.Local.sLines)</string>
        <string>'F.Intrinsic.String.Build("{0}{1}",V.Local.sLines,v.DataView.SOLine!SOView(v.Args.iOrd).Info2!FieldVal,V.Local.sLines)</string>
        <string>F.Intrinsic.String.RPad(V.Local.sLines," ",354,V.Local.sLines)</string>
        <string>'User1</string>
        <string>F.Intrinsic.String.Build("{0}{1}",V.Local.sLines,v.uGlobal.uOrders(v.Args.iOrd)!LineUser1,V.Local.sLines)</string>
        <string>'F.Intrinsic.String.Build("{0}{1}",V.Local.sLines,v.DataView.SOLine!SOView(v.Args.iOrd).LineUser1!FieldVal,V.Local.sLines)</string>
        <string>F.Intrinsic.String.RPad(V.Local.sLines," ",384,V.Local.sLines)</string>
        <string>'User2</string>
        <string>F.Intrinsic.String.Build("{0}{1}",V.Local.sLines,v.uGlobal.uOrders(v.Args.iOrd)!LineUser2,V.Local.sLines)</string>
        <string>'F.Intrinsic.String.Build("{0}{1}",V.Local.sLines,v.DataView.SOLine!SOView(v.Args.iOrd).LineUser2!FieldVal,V.Local.sLines)</string>
        <string>F.Intrinsic.String.RPad(V.Local.sLines," ",414,V.Local.sLines)</string>
        <string>'User3</string>
        <string>F.Intrinsic.String.Build("{0}{1}",V.Local.sLines,v.uGlobal.uOrders(v.Args.iOrd)!LineUser3,V.Local.sLines)</string>
        <string>'F.Intrinsic.String.Build("{0}{1}",V.Local.sLines,v.DataView.SOLine!SOView(v.Args.iOrd).LineUser3!FieldVal,V.Local.sLines)</string>
        <string>F.Intrinsic.String.RPad(V.Local.sLines," ",444,V.Local.sLines)</string>
        <string>'User3</string>
        <string>F.Intrinsic.String.Build("{0}{1}",V.Local.sLines,v.uGlobal.uOrders(v.Args.iOrd)!LineUser4,V.Local.sLines)</string>
        <string>'F.Intrinsic.String.Build("{0}{1}",V.Local.sLines,v.DataView.SOLine!SOView(v.Args.iOrd).LineUser4!FieldVal,V.Local.sLines)</string>
        <string>F.Intrinsic.String.RPad(V.Local.sLines," ",474,V.Local.sLines)</string>
        <string>'Promise Date</string>
        <string>F.Intrinsic.String.Format(v.uGlobal.uOrders(v.Args.iOrd)!PromiseDate, "YYYYMMDD", v.Local.sDate)</string>
        <string>'F.Intrinsic.String.Format(v.DataView.SOLine!SOView(v.Args.iOrd).PromiseDate!FieldVal, "YYYYMMDD", v.Local.sDate)</string>
        <string>F.Intrinsic.String.Build("{0}{1}", v.Local.sLines, v.Local.sDate, v.Local.sLines)</string>
        <string>F.Intrinsic.String.RPad(v.Local.sLines, " ", 510, v.Local.sLines)</string>
        <string>'1 Line</string>
        <string>F.Intrinsic.String.Build("{0}1 {1}",V.Local.sLines, v.Ambient.NewLine,V.Local.sLines)</string>
        <string>F.Intrinsic.Variable.AddRV("sLines", v.Local.sLines)</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string>F.Intrinsic.Control.Label("LLines_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_4157_EDI_UNI.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(form1_unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string>Program.Sub.LLines.End</string>
        <string />
        <string>Program.Sub.ImportXls.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("ImportXls_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.sFile.Declare(String)</string>
        <string>V.Local.sData.Declare(String)</string>
        <string>V.Local.sFields.Declare(String)</string>
        <string>v.Local.sTypes.Declare(String)</string>
        <string>F.Intrinsic.UI.ChangeWaitStatus("Reading Orders File!")</string>
        <string>V.Local.sFile.Set(V.Screen.Form1!txtFile.Text)</string>
        <string>V.Local.sFields.Set("ConversionFlag*!*PONumber*!*ShipName*!*ShipAdd1*!*ShipAdd2*!*ShipAdd3*!*ShipAdd4*!*ShipAdd5*!*ShipCity*!*ShipState*!*ShipZip*!*ShipCountry*!*Contact*!*ContactPhone*!*BuyerPartNO*!*OrderQty*!*UnitPrice*!*PromiseDate*!*ShipVia*!*WayBill*!*Carrier*!*ShipAttn*!*BillName*!*BillAdd1*!*BillAdd2*!*BillAdd3*!*BillAdd4*!*BillAdd5*!*BillCity*!*BillState*!*BillZip*!*BillCountry*!*BillAttn*!*BillIntlFlag*!*HDRUser2*!*HDRUser3*!*HDRUser4*!*HDRUser5*!*OrderSort*!*OrderSort2*!*Email*!*POLineNumber*!*Info1*!*Info2*!*LineUser1*!*LineUser2*!*LineUser3*!*LineUser4*!*LineUser5*!*ShipToCode*!*BuyerID")</string>
        <string>'v.Local.sTypes.Set("String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String")</string>
        <string>F.Automation.MSExcel.ReadSpreadsheet(v.Local.sFile, v.Local.sData)</string>
        <string>F.Intrinsic.String.Split(v.Local.sData, "&amp;^&amp;", v.Local.sData)</string>
        <string>F.Intrinsic.Variable.LoadUDTFromString(v.uGlobal.uOrders, v.Local.sFields, v.Local.sData, "$!$", "*!*", False)</string>
        <string>'F.Intrinsic.File.File2String(V.Local.sFile.Trim,V.Local.sData)</string>
        <string>'F.Data.DataTable.CreateFromString("SOLine", v.local.sData, v.Local.sFields, v.Local.sTypes, ",", v.Ambient.Newline, True)</string>
        <string>'F.Data.DataView.Create("SOLine", "SOView", 22, "ConversionFlag &lt;&gt; 'Y' AND PONumber &lt;&gt; 'PO'", "PONumber Asc, BuyerPartNO Asc")</string>
        <string>F.Intrinsic.Control.ExitSub</string>
        <string>F.Intrinsic.Control.Label("ImportXls_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_4157_EDI_UNI.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(form1_unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>Program.Sub.ImportXls.End</string>
        <string />
        <string>Program.Sub.HeaderA.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("HeaderA_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string>V.Local.sError.Declare(String)</string>
        <string>'Header A Record </string>
        <string>'Buyer ID(Length 35)(Starts 1) = Column AX </string>
        <string>'PO Number(Length 15)(Starts 36) = Column B </string>
        <string>'Line Number(Length 3)(Starts 51) = Always "000" for the header record </string>
        <string>'User 2(Length 30)(Starts 91) = column AI </string>
        <string>'User 3(Length 30)(Starts 121) = column </string>
        <string>'AJ User 4(Length 30)(Starts 151) = Column AK </string>
        <string>'User 5(Length 30)(Starts 181) = Column AL </string>
        <string>'Order Sort (Length 20)(Starts 211) = Column AM </string>
        <string>'Order Sort 2 (Length 30)(Starts 231) = Column AN </string>
        <string>'Email (Length 100)(Starts 264) = Column AO </string>
        <string>'Ship via (Length 20)(Starts 364) = Column S </string>
        <string>'Bill(Length 19)(Starts 428) = Column T </string>
        <string>'Carrier(Length 6)(Starts 447) = Column U </string>
        <string>'Record Type (Length 1)(Starts 511) = Always A </string>
        <string>v.Local.sHeaderA.Declare(String)</string>
        <string>v.Local.sRet.Declare(String)</string>
        <string>F.Intrinsic.String.RPad(v.uGlobal.uOrders(v.Args.iOrd)!BuyerID.Trim, " ", 35, v.Local.sHeaderA)</string>
        <string>'F.Intrinsic.String.RPad(v.DataView.SOLine!SOView(V.Args.iOrd).BuyerID!FieldValTrim, " ", 35, v.Local.sHeaderA)</string>
        <string>F.Intrinsic.String.RPad(v.uGlobal.uOrders(v.Args.iOrd)!PONumber, " ", 15, v.Local.sRet)</string>
        <string>'F.Intrinsic.String.RPad(v.DataView.SOLine!SOView(v.Args.iOrd).PONumber!FieldValTrim, " ", 15, v.Local.sRet)</string>
        <string>F.Intrinsic.String.build("{0}{1}000", v.Local.sHeaderA, v.Local.sRet, v.Local.sHeaderA)</string>
        <string>F.Intrinsic.String.RPad(v.Local.sHeaderA, " ",90, v.Local.sHeaderA)</string>
        <string>v.Local.sRet.Redim(0,5)</string>
        <string>F.Intrinsic.String.RPad(v.uGlobal.uOrders(v.Args.iOrd)!HDRUser2.Trim, " ", 30, v.Local.sRet(0))</string>
        <string>'F.Intrinsic.String.RPad(v.DataView.SOLine!SOView(v.Args.iOrd).HDRUser2!FieldValTrim, " ", 30, v.Local.sRet(0))</string>
        <string>F.Intrinsic.String.RPad(v.uGlobal.uOrders(v.Args.iOrd)!HDRUser3.Trim, " ", 30, v.Local.sRet(1))</string>
        <string>'F.Intrinsic.String.RPad(v.DataView.SOLine!SOView(v.Args.iOrd).HDRUser3!FieldValTrim, " ", 30, v.Local.sRet(1))</string>
        <string>F.Intrinsic.String.RPad(v.uGlobal.uOrders(v.Args.iOrd)!HDRUser4.Trim, " ", 30, v.Local.sRet(2))</string>
        <string>'F.Intrinsic.String.RPad(v.DataView.SOLine!SOView(v.Args.iOrd).HDRUser4!FieldValTrim, " ", 30, v.Local.sRet(2))</string>
        <string>F.Intrinsic.String.RPad(v.uGlobal.uOrders(v.Args.iOrd)!HDRUser5.Trim, " ", 30, v.Local.sRet(3))</string>
        <string>'F.Intrinsic.String.RPad(v.DataView.SOLine!SOView(v.Args.iOrd).HDRUser5!FieldValTrim, " ", 30, v.Local.sRet(3))</string>
        <string>F.Intrinsic.String.RPad(v.uGlobal.uOrders(v.Args.iOrd)!OrderSort.Trim, " ", 20, v.Local.sRet(4))</string>
        <string>'F.Intrinsic.String.RPad(v.DataView.SOLine!SOView(v.Args.iOrd).OrderSort!FieldValTrim, " ", 20, v.Local.sRet(4))</string>
        <string>F.Intrinsic.String.RPad(v.uGlobal.uOrders(v.Args.iOrd)!OrderSort2.Trim, " ", 30, v.Local.sRet(5))</string>
        <string>'F.Intrinsic.String.RPad(v.DataView.SOLine!SOView(v.Args.iOrd).OrderSort2!FieldValTrim, " ", 30, v.Local.sRet(5))</string>
        <string>F.Intrinsic.String.Build("{0}{1}{2}{3}{4}{5}{6}", v.Local.sHeaderA, v.Local.sRet(0),v.Local.sRet(1),v.Local.sRet(2),v.Local.sRet(3),v.Local.sRet(4), v.Local.sRet(5), v.Local.sHeaderA)</string>
        <string>F.Intrinsic.String.RPad(v.Local.sHeaderA, " ", 263, v.Local.sHeaderA)</string>
        <string>F.Intrinsic.String.RPad(v.uGlobal.uOrders(v.Args.iOrd)!Email.Trim, " ", 100, v.Local.sRet(0))</string>
        <string>'F.Intrinsic.String.RPad(v.DataView.SOLine!SOView(v.Args.iOrd).Email!FieldValTrim, " ", 100, v.Local.sRet(0))</string>
        <string>F.Intrinsic.String.RPad(v.uGlobal.uOrders(v.Args.iOrd)!ShipVia.Trim, " ", 20, v.Local.sRet(1))</string>
        <string>'F.Intrinsic.String.RPad(v.DataView.SOLine!SOView(v.Args.iOrd).ShipVia!FieldValTrim, " ", 20, v.Local.sRet(1))</string>
        <string>F.Intrinsic.String.Build("{0}{1}{2}", v.Local.sHeaderA, v.Local.sRet(0),v.Local.sRet(1), v.Local.sHeaderA)</string>
        <string>F.Intrinsic.String.RPad(v.Local.sHeaderA, " ", 427, v.Local.sHeaderA)</string>
        <string>F.Intrinsic.String.RPad(v.uGlobal.uOrders(v.Args.iOrd)!WayBill.Trim, " ", 19, v.Local.sRet(0))</string>
        <string>'F.Intrinsic.String.RPad(v.DataView.SOLine!SOView(v.Args.iOrd).WayBill!FieldValTrim, " ", 19, v.Local.sRet(0))</string>
        <string>F.Intrinsic.String.RPad(v.uGlobal.uOrders(v.Args.iOrd)!Carrier.Trim, " ", 6, v.Local.sRet(1))</string>
        <string>'F.Intrinsic.String.RPad(v.DataView.SOLIne!SOView(v.Args.iOrd).Carrier!FieldValTrim, " ", 6, v.Local.sRet(1))</string>
        <string>F.Intrinsic.String.Build("{0}{1}{2}", v.Local.sHeaderA, v.Local.sRet(0), v.Local.sRet(1), v.Local.sHeaderA)</string>
        <string>F.Intrinsic.String.RPad(v.Local.sHeaderA, " ", 510, v.Local.sHeaderA)</string>
        <string>F.Intrinsic.String.Build("{0}A {1}", v.Local.sHeaderA, v.Ambient.NewLine,v.Local.sHeaderA)</string>
        <string>F.Intrinsic.Variable.AddRV("sHeaderA", v.Local.sHeaderA)</string>
        <string>F.Intrinsic.Control.ExitSub</string>
        <string>F.Intrinsic.Control.Label("HeaderA_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_4157_EDI_UNI.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(form1_unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string>Program.Sub.HeaderA.End</string>
        <string />
        <string>Program.Sub.HeaderB.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("HeaderB_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string>V.Local.sError.Declare(String)</string>
        <string>'Header B Record </string>
        <string>'Buyer ID(Length 35)(Starts 1) = Column AX </string>
        <string>'PO Number(Length 15)(Starts 36) = Column B </string>
        <string>'Line Number(Length 3)(Starts 51) = Always "000" for the header record </string>
        <string>'Bill To Name(Length 40)(Starts 55) = Column W </string>
        <string>'Bill To Address 1(Length 40)(Starts 95) = Column X </string>
        <string>'Bill To Address 2(Length 40)(Starts 135) = Column Y </string>
        <string>'Bill To Address 3(Length 40)(Starts 175) = Column Z </string>
        <string>'Bill To Address 4(Length 40)(Starts 215) = Column AA </string>
        <string>'Bill To Address 5(Length 40)(Starts 255) = Column AB </string>
        <string>'Bill To City(Length 25)(Starts 295) = Column AC </string>
        <string>'Bill to State(Length 2)(Starts 320) = Column AD </string>
        <string>'Bill to Zip(Length 13)(Starts 322) = Column AE </string>
        <string>'Bill to Country(Length 25)(Starts 335) = Column AF </string>
        <string>'Bill to Attn (Length 40)(Starts 360) = Column AG</string>
        <string>'Bill To Intl (Length 1)(Starts 450) = Column AH </string>
        <string>'Record Type(Length 1)(Starts 511) = Always B </string>
        <string>v.Local.sHeaderB.Declare(String)</string>
        <string>v.Local.sRet.Declare(String)</string>
        <string>F.Intrinsic.String.RPad(v.uGlobal.uOrders(V.Args.iOrd)!BuyerID.Trim, " ", 35, v.Local.sHeaderB)</string>
        <string>'F.Intrinsic.String.RPad(v.DataView.SOLine!SOView(V.Args.iOrd).BuyerID!FieldValTrim, " ", 35, v.Local.sHeaderB)</string>
        <string>F.Intrinsic.String.RPad(v.uGlobal.uOrders(v.Args.iOrd)!PONumber.Trim, " ", 15, v.Local.sRet)</string>
        <string>'F.Intrinsic.String.RPad(v.DataView.SOLine!SOView(v.Args.iOrd).PONumber!FieldValTrim, " ", 15, v.Local.sRet)</string>
        <string>F.Intrinsic.String.build("{0}{1}000", v.Local.sHeaderB, v.Local.sRet, v.Local.sHeaderB)</string>
        <string>F.Intrinsic.String.RPad(v.Local.sHeaderB, " ",90, v.Local.sHeaderB)</string>
        <string>v.Local.sRet.Redim(0,10)</string>
        <string>F.Intrinsic.String.RPad(v.uGlobal.uOrders(V.Args.iOrd)!BillName.Trim, " ", 40, v.Local.sRet(0))</string>
        <string>'F.Intrinsic.String.RPad(v.DataView.SOLine!SOView(V.Args.iOrd).BillName!FieldValTrim, " ", 40, v.Local.sRet(0))</string>
        <string>F.Intrinsic.String.RPad(v.uGlobal.uOrders(v.Args.iOrd)!BillAdd1.Trim, " ", 40, v.Local.sRet(1))</string>
        <string>'F.Intrinsic.String.RPad(v.DataView.SOLine!SOView(v.Args.iOrd).BillAdd1!FieldValTrim, " ", 40, v.Local.sRet(1))</string>
        <string>F.Intrinsic.String.RPad(v.uGlobal.uOrders(v.Args.iOrd)!BillAdd2.Trim, " ", 40, v.Local.sRet(2))</string>
        <string>'F.Intrinsic.String.RPad(v.DataView.SOLine!SOView(v.Args.iOrd).BillAdd2!FieldValTrim, " ", 40, v.Local.sRet(2))</string>
        <string>F.Intrinsic.String.RPad(v.uGlobal.uOrders(v.Args.iOrd)!BillAdd3.Trim, " ", 40, v.Local.sRet(3))</string>
        <string>'F.Intrinsic.String.RPad(v.DataView.SOLine!SOView(v.Args.iOrd).BillAdd3!FieldValTrim, " ", 40, v.Local.sRet(3))</string>
        <string>F.Intrinsic.String.RPad(v.uGlobal.uOrders(v.Args.iOrd)!BillAdd4.Trim, " ", 40, v.Local.sRet(4))</string>
        <string>'F.Intrinsic.String.RPad(v.DataView.SOLine!SOView(v.Args.iOrd).BillAdd4!FieldValTrim, " ", 40, v.Local.sRet(4))</string>
        <string>F.Intrinsic.String.RPad(v.uGlobal.uOrders(v.Args.iOrd)!BillAdd5.Trim, " ", 40, v.Local.sRet(5))</string>
        <string>'F.Intrinsic.String.RPad(v.DataView.SOLine!SOView(v.Args.iOrd).BillAdd5!FieldValTrim, " ", 40, v.Local.sRet(5))</string>
        <string>F.Intrinsic.String.RPad(v.uGlobal.uOrders(v.Args.iOrd)!BillCity.Trim, " ", 25, v.Local.sRet(6))</string>
        <string>'F.Intrinsic.String.RPad(v.DataView.SOLine!SOView(v.Args.iOrd).BillCity!FieldValTrim, " ", 25, v.Local.sRet(6))</string>
        <string>F.Intrinsic.String.RPad(v.uGlobal.uOrders(v.Args.iOrd)!BillState.Trim, " ", 2, v.Local.sRet(7))</string>
        <string>'F.Intrinsic.String.RPad(v.DataView.SOLine!SOView(v.Args.iOrd).BillState!FieldValTrim, " ", 2, v.Local.sRet(7))</string>
        <string>F.Intrinsic.String.RPad(v.uGlobal.uOrders(v.Args.iOrd)!BillZip.Trim, " ", 13, v.Local.sRet(8))</string>
        <string>'F.Intrinsic.String.RPad(v.DataView.SOLine!SOView(v.Args.iOrd).BillZip!FieldValTrim, " ", 13, v.Local.sRet(8))</string>
        <string>F.Intrinsic.String.RPad(v.uGlobal.uOrders(v.Args.iOrd)!BillCountry.Trim, " ", 25, v.Local.sRet(9))</string>
        <string>'F.Intrinsic.String.RPad(v.DataView.SOLine!SOView(v.Args.iOrd).BillCountry!FieldValTrim, " ", 25, v.Local.sRet(9))</string>
        <string>F.Intrinsic.String.RPad(v.uGlobal.uOrders(v.Args.iOrd)!BillAttn.Trim, " ", 40, v.Local.sRet(10))</string>
        <string>'F.Intrinsic.String.RPad(v.DataView.SOLine!SOView(v.Args.iOrd).BillAttn!FieldValTrim, " ", 40, v.Local.sRet(10))</string>
        <string>F.Intrinsic.String.Build("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}", v.Local.sHeaderB, v.Local.sRet(0),v.Local.sRet(1), v.Local.sRet(2), v.Local.sRet(3), v.Local.sRet(4),v.Local.sRet(5), v.Local.sRet(6), v.Local.sRet(7), v.Local.sRet(8), v.Local.sRet(9), v.Local.sRet(10) , v.Local.sHeaderB)</string>
        <string>F.Intrinsic.String.RPad(v.Local.sHeaderB, " ", 449, v.Local.sHeaderB)</string>
        <string>F.Intrinsic.String.RPad(v.uGlobal.uOrders(v.Args.iOrd)!BillIntlFlag.Trim, " ", 1, v.Local.sRet(0))</string>
        <string>'F.Intrinsic.String.RPad(v.DataView.SOLine!SOView(v.Args.iOrd).BillIntlFlag!FieldValTrim, " ", 1, v.Local.sRet(0))</string>
        <string>F.Intrinsic.String.Build("{0}{1}", v.Local.sHeaderB, v.Local.sRet(0), v.Local.sHeaderB)</string>
        <string>F.Intrinsic.String.RPad(v.Local.sHeaderB, " ", 510, v.Local.sHeaderB)</string>
        <string>F.Intrinsic.String.Build("{0}B {1}", v.Local.sHeaderB, v.Ambient.NewLine,v.Local.sHeaderB)</string>
        <string>F.Intrinsic.Variable.AddRV("sHeaderB", v.Local.sHeaderB)</string>
        <string>F.Intrinsic.Control.ExitSub</string>
        <string>F.Intrinsic.Control.Label("HeaderB_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_4157_EDI_UNI.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(form1_unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string>Program.Sub.HeaderB.End</string>
        <string />
        <string>Program.Sub.HeaderC.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("HeaderC_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string>V.Local.sError.Declare(String)</string>
        <string>'Header C </string>
        <string>'Record Buyer ID(Length 35)(Starts 1) = Column AX </string>
        <string>'PO Number(Length 15)(Starts 36) = Column B </string>
        <string>'Line Number(Length 3)(Starts 51) = Always "000" for the header record </string>
        <string>'Ship To Name(Length 40)(Starts 55) = Column C </string>
        <string>'Ship To Address1(Length 40)(Starts 95) = Column D </string>
        <string>'Ship to Address2(Length 40)(Starts 135) = Column E S</string>
        <string>'hip To Address3(Length 40)(Starts 175) = Column F </string>
        <string>'ship to Address4(Length 40)(Starts 215) = Column G </string>
        <string>'Ship To address5(Length 40)(Starts 255) = Column H </string>
        <string>'Ship to City(Length 25)(Starts 295) = Column I </string>
        <string>'Ship To State(Length 2)(Starts 320) = Column J </string>
        <string>'Ship To Zip(Length 13)(Starts 322) = Column K </string>
        <string>'Ship to country(Length 25)(Starts 335) = Column L </string>
        <string>'Ship to Attn(Length 40)(Starts 360) = Column V </string>
        <string>'Record Type(Length 1)(Starts 511) = Always C </string>
        <string>v.Local.sHeaderC.Declare(String)</string>
        <string>v.Local.sRet.Declare(String)</string>
        <string>F.Intrinsic.String.RPad(v.uGlobal.uOrders(V.Args.iOrd)!BuyerID.Trim, " ", 35, v.Local.sHeaderC)</string>
        <string>'F.Intrinsic.String.RPad(v.DataView.SOLine!SOView(V.Args.iOrd).BuyerID!FieldValTrim, " ", 35, v.Local.sHeaderC)</string>
        <string>F.Intrinsic.String.RPad(v.uGlobal.uOrders(v.Args.iOrd)!PONumber.Trim, " ", 15, v.Local.sRet)</string>
        <string>F.Intrinsic.String.build("{0}{1}000", v.Local.sHeaderC, v.Local.sRet, v.Local.sHeaderC)</string>
        <string>F.Intrinsic.String.RPad(v.Local.sHeaderC, " ",90, v.Local.sHeaderC)</string>
        <string>v.Local.sRet.Redim(0,10)</string>
        <string>F.Intrinsic.String.RPad(v.uGlobal.uOrders(V.Args.iOrd)!ShipName.Trim, " ", 40, v.Local.sRet(0))</string>
        <string>'F.Intrinsic.String.RPad(v.DataView.SOLine!SOView(V.Args.iOrd).ShipName!FieldValTrim, " ", 40, v.Local.sRet(0))</string>
        <string>F.Intrinsic.String.RPad(v.uGlobal.uOrders(v.Args.iOrd)!ShipAdd1.Trim, " ", 40, v.Local.sRet(1))</string>
        <string>'F.Intrinsic.String.RPad(v.DataView.SOLine!SOView(v.Args.iOrd).ShipAdd1!FieldValTrim, " ", 40, v.Local.sRet(1))</string>
        <string>F.Intrinsic.String.RPad(v.uGlobal.uOrders(v.Args.iOrd)!ShipAdd2.Trim, " ", 40, v.Local.sRet(2))</string>
        <string>'F.Intrinsic.String.RPad(v.DataView.SOLine!SOView(v.Args.iOrd).ShipAdd2!FieldValTrim, " ", 40, v.Local.sRet(2))</string>
        <string>F.Intrinsic.String.RPad(v.uGlobal.uOrders(v.Args.iOrd)!ShipAdd3.Trim, " ", 40, v.Local.sRet(3))</string>
        <string>'F.Intrinsic.String.RPad(v.DataView.SOLine!SOView(v.Args.iOrd).ShipAdd3!FieldValTrim, " ", 40, v.Local.sRet(3))</string>
        <string>F.Intrinsic.String.RPad(v.uGlobal.uOrders(v.Args.iOrd)!ShipAdd4.Trim, " ", 40, v.Local.sRet(4))</string>
        <string>'F.Intrinsic.String.RPad(v.DataView.SOLine!SOView(v.Args.iOrd).ShipAdd4!FieldValTrim, " ", 40, v.Local.sRet(4))</string>
        <string>F.Intrinsic.String.RPad(v.uGlobal.uOrders(v.Args.iOrd)!ShipAdd5.Trim, " ", 40, v.Local.sRet(5))</string>
        <string>'F.Intrinsic.String.RPad(v.DataView.SOLine!SOView(v.Args.iOrd).ShipAdd5!FieldValTrim, " ", 40, v.Local.sRet(5))</string>
        <string>F.Intrinsic.String.RPad(v.uGlobal.uOrders(v.Args.iOrd)!ShipCity.Trim, " ", 25, v.Local.sRet(6))</string>
        <string>'F.Intrinsic.String.RPad(v.DataView.SOLine!SOView(v.Args.iOrd).ShipCity!FieldValTrim, " ", 25, v.Local.sRet(6))</string>
        <string>F.Intrinsic.String.RPad(v.uGlobal.uOrders(v.Args.iOrd)!ShipState.Trim, " ", 2, v.Local.sRet(7))</string>
        <string>'F.Intrinsic.String.RPad(v.DataView.SOLine!SOView(v.Args.iOrd).ShipState!FieldValTrim, " ", 2, v.Local.sRet(7))</string>
        <string>F.Intrinsic.String.RPad(v.uGlobal.uOrders(v.Args.iOrd)!ShipZip.Trim, " ", 13, v.Local.sRet(8))</string>
        <string>'F.Intrinsic.String.RPad(v.DataView.SOLine!SOView(v.Args.iOrd).ShipZip!FieldValTrim, " ", 13, v.Local.sRet(8))</string>
        <string>F.Intrinsic.String.RPad(v.uGlobal.uOrders(v.Args.iOrd)!ShipCountry.Trim, " ", 25, v.Local.sRet(9))</string>
        <string>'F.Intrinsic.String.RPad(v.DataView.SOLine!SOView(v.Args.iOrd).ShipCountry!FieldValTrim, " ", 25, v.Local.sRet(9))</string>
        <string>F.Intrinsic.String.RPad(v.uGlobal.uOrders(v.Args.iOrd)!ShipAttn.Trim, " ", 40, v.Local.sRet(10))</string>
        <string>'F.Intrinsic.String.RPad(v.DataView.SOLine!SOView(v.Args.iOrd).ShipAttn!FieldValTrim, " ", 40, v.Local.sRet(10))</string>
        <string>F.Intrinsic.String.Build("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}", v.Local.sHeaderC, v.Local.sRet(0),v.Local.sRet(1), v.Local.sRet(2), v.Local.sRet(3), v.Local.sRet(4), v.Local.sRet(5), v.Local.sRet(6), v.Local.sRet(7), v.Local.sRet(8), v.Local.sRet(9), v.Local.sRet(10) , v.Local.sHeaderC)</string>
        <string>F.Intrinsic.String.RPad(v.Local.sHeaderC, " ", 510, v.Local.sHeaderC)</string>
        <string>F.Intrinsic.String.Build("{0}C {1}", v.Local.sHeaderC, v.Ambient.NewLine,v.Local.sHeaderC)</string>
        <string>F.Intrinsic.Variable.AddRV("sHeaderC", v.Local.sHeaderC)</string>
        <string>F.Intrinsic.Control.ExitSub</string>
        <string>F.Intrinsic.Control.Label("HeaderC_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_4157_EDI_UNI.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(form1_unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string>Program.Sub.HeaderC.End</string>
        <string />
        <string>Program.Sub.Header.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("Header_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string>V.Local.sError.Declare(String)</string>
        <string>'EDI Location = CSV Location Buyer ID(Length 35)(Starts 1) = Column AX </string>
        <string>'PO Number(Length 15)(Starts 36) = Column B </string>
        <string>'Line Number(Length 3)(Starts 51) = Always "000" for the header record </string>
        <string>'Ship to Code(Length )(Starts 71) = Column AW </string>
        <string>'Record Type(Length 1)(Starts 511) = Always H for the header record </string>
        <string>v.Local.sHeader.Declare(String)</string>
        <string>v.Local.sRet.Declare(String)</string>
        <string>F.Intrinsic.String.RPad(v.uGlobal.uOrders(V.Args.iOrd)!BuyerID.Trim, " ", 35, v.Local.sHeader)</string>
        <string>'F.Intrinsic.String.RPad(v.DataView.SOLine!SOView(V.Args.iOrd).BuyerID!FieldValTrim, " ", 35, v.Local.sHeader)</string>
        <string>F.Intrinsic.String.RPad(v.uGlobal.uOrders(v.Args.iOrd)!PONumber.Trim, " ", 15, v.Local.sRet)</string>
        <string>'F.Intrinsic.String.RPad(v.DataView.SOLine!SOView(v.Args.iOrd).PONumber!FieldValTrim, " ", 15, v.Local.sRet)</string>
        <string>F.Intrinsic.String.build("{0}{1}000", v.Local.sHeader, v.Local.sRet, v.Local.sHeader)</string>
        <string>F.Intrinsic.String.RPad(v.Local.sHeader,  " ",70, v.Local.sHeader)</string>
        <string>F.Intrinsic.String.RPad(v.uGlobal.uOrders(v.Args.iOrd)!ShipToCode.Trim, " ", 17, v.Local.sRet)</string>
        <string>'F.Intrinsic.String.RPad(v.DataView.SOLine!SoView(v.Args.iOrd).ShipToCode!FieldValTrim, " ", 17, v.Local.sRet)</string>
        <string>F.Intrinsic.String.Build("{0}{1}", v.Local.sHeader, v.Local.sRet, v.Local.sHeader)</string>
        <string>F.Intrinsic.String.RPad(v.Local.sHeader, " ", 510, v.Local.sHeader)</string>
        <string>F.Intrinsic.String.Build("{0}H {1}",v.Local.sHeader, v.Ambient.NewLine,v.Local.sHeader)</string>
        <string>F.Intrinsic.Variable.AddRV("sHeader", v.Local.sHeader)</string>
        <string>F.Intrinsic.Control.ExitSub</string>
        <string>F.Intrinsic.Control.Label("Header_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_4157_EDI_UNI.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(form1_unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string>Program.Sub.Header.End</string>
        <string />
        <string>Program.Sub.Comments.Start</string>
        <string>${$0$}$GCG_3647_PHO_EDI$}$SKC$}$3/21/2016$}$False</string>
        <string>Program.Sub.Comments.End</string>
        <string />
        <string />
      </Lines>
    </TextStrings>
  </TextSource>
  <Scrolling>
    <WindowOriginY>97</WindowOriginY>
    <Options>None</Options>
  </Scrolling>
  <Outlining>
    <AllowOutlining>true</AllowOutlining>
    <ImageSize>8</ImageSize>
    <Ranges>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>0</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>52</Y>
        </EndPoint>
        <Text>Program.Sub.ScreenSU</Text>
        <DisplayText>Program.Sub.ScreenSU</DisplayText>
        <Visible>false</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>54</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>114</Y>
        </EndPoint>
        <Text>Program.Sub.Preflight</Text>
        <DisplayText>Program.Sub.Preflight</DisplayText>
        <Visible>false</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>116</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>144</Y>
        </EndPoint>
        <Text>Program.Sub.Main</Text>
        <DisplayText>Program.Sub.Main</DisplayText>
        <Visible>false</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>146</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>167</Y>
        </EndPoint>
        <Text>Program.Sub.form1_unload</Text>
        <DisplayText>Program.Sub.form1_unload</DisplayText>
        <Visible>false</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>169</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>264</Y>
        </EndPoint>
        <Text>Program.Sub.cmdok_click</Text>
        <DisplayText>Program.Sub.cmdok_click</DisplayText>
        <Visible>true</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>266</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>287</Y>
        </EndPoint>
        <Text>Program.Sub.cmdbrowser_click</Text>
        <DisplayText>Program.Sub.cmdbrowser_click</DisplayText>
        <Visible>false</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>289</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>380</Y>
        </EndPoint>
        <Text>Program.Sub.LLines</Text>
        <DisplayText>Program.Sub.LLines</DisplayText>
        <Visible>false</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>382</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>409</Y>
        </EndPoint>
        <Text>Program.Sub.ImportXls</Text>
        <DisplayText>Program.Sub.ImportXls</DisplayText>
        <Visible>false</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>411</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>474</Y>
        </EndPoint>
        <Text>Program.Sub.HeaderA</Text>
        <DisplayText>Program.Sub.HeaderA</DisplayText>
        <Visible>false</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>476</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>543</Y>
        </EndPoint>
        <Text>Program.Sub.HeaderB</Text>
        <DisplayText>Program.Sub.HeaderB</DisplayText>
        <Visible>false</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>545</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>606</Y>
        </EndPoint>
        <Text>Program.Sub.HeaderC</Text>
        <DisplayText>Program.Sub.HeaderC</DisplayText>
        <Visible>false</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>608</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>639</Y>
        </EndPoint>
        <Text>Program.Sub.Header</Text>
        <DisplayText>Program.Sub.Header</DisplayText>
        <Visible>true</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>641</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>643</Y>
        </EndPoint>
        <Text>Program.Sub.Comments</Text>
        <DisplayText>Program.Sub.Comments</DisplayText>
        <Visible>false</Visible>
        <Level>0</Level>
      </Range>
    </Ranges>
  </Outlining>
  <HyperText />
  <Spelling />
  <Braces />
</SyntaxEdit>